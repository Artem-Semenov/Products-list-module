Робимо невелику апку - список товарів

за основу беремо апі
https://dummyjson.com/docs

наступний кейс

1. При заході на сайт, відоброжаємо усі товари з пагінацією
для цього, 
- при першому вході, дивимось в індекс дб, чи є там у нас товари
- якщо нема, показуємо прелодер і завантажуємо  усі товари: https://dummyjson.com/products, після чого записуємо їх у базу індекс дб

- якщо товари є, ми:
  - рендеримо товари, по 2 на сторінку
  - виконуємо https://dummyjson.com/products та оновлюємо дані в базі, яких нема, або які змінились
=== 

!!! кожен раз коли на клієнта приходить будь-який товар, ми маємо перевіряти чи є він у нас у базі, якщо нема - додавати. якшо є (ідентифікатор id) - перезаписуємо
====
 побажання по реалізації: юзаємо 3 класи:
class App - загальний керуючий клас для апки
class Item {constructor(itemId){}} - елемент товару, це має бути клас
має мати в собі
async Item.Update(data) - оновлює дані про себе в IndexDB
async Item.Reload() - виконує https://dummyjson.com/products/{itemId} та оновлює дані про себе в IndexDB та модифікує свій DOM
async Item.Get() - повертає дані про себе з бази
async Item.Create(data) - додає дані про себе IndexDB, оновлює itemId
async Item.DOM() - повертає DOM Eelement для моделі об'єкту


має містити в собі підписки на події:
 - onClick - передається функція, спрацьовує коли клікають на товар
===

при рендері, усі елементи знаходяться в контейнері
class ItemsList {constructor(){}}
в контейнері є методи

async ItemsList.Init(pageSize=2) - метод завантажує дані про товари (реалізує задачу "При заході на сайт, відоброжаємо усі товари з пагінацією"...)

async ItemsList.Next() - завантажує та відображає наступні pageSize товари
async ItemsList.Prev() - завантажує та відображає попередні pageSize товари

async ItemsList.AddEl(data) - створює Item та додає його до контейнеру

async ItemsList.RemoveEl(id) - якщор в контейнері є елемет Item з ідентифікатором id, його має видалити

async ItemsList.ReloadEl(id) - якщор в контейнері є елемет Item з ідентифікатором id, він має оновити свої дані і змінити DOM


усі async методи мають повертати проміс

someFunc(){
return new Promise((ok,error)=>{
... do some work

if(all done){ok(data);}
if(trouble){error(data);}

});
}